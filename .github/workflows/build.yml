name: Build test
on:
  push:
    tags:
  pull_request:
    branches:
      - master
env:
  MASTER_BRANCH: refs/heads/master
jobs:
  universal-build:
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive
    - name: Set up Python
      uses: actions/setup-python@v1
      with:
        python-version: 3.6
    - name: Install rospy-build
      run: |
        python -m pip install --upgrade pip
        pip install -U setuptools wheel
        ./rospy-builder/install.sh
        pip install rospy-builder/
    - name: Export branch suffix and make an empty directory
      if: github.ref == env.MASTER_BRANCH
      run: |
        echo BRANCH_SUFFIX=_pre >> $GITHUB_ENV
        mkdir -p any
      shell: bash
    - name: Download deployed packages
      if: github.ref != env.MASTER_BRANCH
      run: |
        git clone -b any https://github.com/rospypi/simple.git any
        rm any/.git -rf
    - name: Build platform independent packages
      run: |
        rospy-build build -d any
    - name: Runs only when tagged or pushed to master
      if: startsWith(github.ref, 'refs/tags/') || github.ref == env.MASTER_BRANCH
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        cd any
        git init
        git config user.name "Tamaki Nishino"
        git config user.email "otamachan@gmail.com"
        git remote add origin https://otamachan:${GITHUB_TOKEN}@github.com/rospypi/simple.git
        git checkout -b any${BRANCH_SUFFIX}
        git add .
        git commit -am "Release $(date)"
        git push -f origin any${BRANCH_SUFFIX}

  native-build:
    needs: universal-build
    runs-on: ${{ matrix.platform }}
    strategy:
      matrix:
        platform: [ubuntu-latest, macos-latest, windows-latest]
        python-version: [3.6, 3.7, 3.8]

    steps:
    - name: Git config
      run: git config --global core.symlinks true
      if: startsWith(matrix.platform, 'windows-')
    - uses: actions/checkout@v2
      with:
        submodules: recursive
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install packages(Ubuntu)
      if: startsWith(matrix.platform, 'ubuntu-')
      env:
        PYTHON_VERSION: ${{ matrix.python-version }}
      run: |
        sudo apt install liblz4-dev sip-dev libeigen3-dev sip-dev libboost-all-dev
        echo BRANCH_NAME=Linux_${PYTHON_VERSION} >> $GITHUB_ENV
    - name: Install packages(MacOS)
      if: startsWith(matrix.platform, 'macos-')
      env:
        PYTHON_VERSION: ${{ matrix.python-version }}
      run: |
        brew install eigen boost
        echo BRANCH_NAME=Darwin_${PYTHON_VERSION} >> $GITHUB_ENV
    - name: Install packages(Windows)
      if: startsWith(matrix.platform, 'windows-')
      env:
        PYTHON_VERSION: ${{ matrix.python-version }}
      run: |
        curl -LO -s "https://github.com/lz4/lz4/archive/v1.9.2.zip"
        unzip -q v1.9.2.zip -d roslz4
        "/c/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise/MSBuild/Current/Bin/MSBuild.exe" "roslz4\lz4-1.9.2\visual\VS2017\lz4.sln" //t:liblz4 //p:Configuration=Release //p:Platform="x64" //p:ForceImportBeforeCppTargets="D:\a\simple\simple\roslz4\build.props" //p:WindowsTargetPlatformVersion="10.0.18362.0"
        curl -LO -s "https://gitlab.com/libeigen/eigen/-/archive/3.3.7/eigen-3.3.7.zip"
        unzip -q eigen-3.3.7.zip -d PyKDL
        echo BOOST_ROOT=${BOOST_ROOT_1_72_0} >> $GITHUB_ENV
        echo EIGEN_ROOT=eigen-3.3.7 >> $GITHUB_ENV
        echo BRANCH_NAME=Windows_${PYTHON_VERSION} >> $GITHUB_ENV
      shell: bash
    - name: Install rospy-build
      run: |
        python -m pip install --upgrade pip
        pip install -U setuptools wheel
        bash ./rospy-builder/install.sh
        pip install rospy-builder/
    - name: Export branch suffix and make an empty directory
      if: github.ref == env.MASTER_BRANCH
      run: |
        echo BRANCH_SUFFIX=_pre >> $GITHUB_ENV
        mkdir -p ${BRANCH_NAME}
      shell: bash
    - name: Download deployed packages
      if: github.ref != env.MASTER_BRANCH
      run: |
        git clone -b ${BRANCH_NAME} https://github.com/rospypi/simple.git ${BRANCH_NAME} || true
        mkdir -p ${BRANCH_NAME}
        rm -rf ${BRANCH_NAME}/.git
      shell: bash
    - name: Build packages
      run: |
        rospy-build build -d ${BRANCH_NAME} --native
      shell: bash
    - name: Runs only when tagged or pushed to master
      if: startsWith(github.ref, 'refs/tags/') || github.ref == env.MASTER_BRANCH
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        cd ${BRANCH_NAME}
        git init
        git config user.name "Tamaki Nishino"
        git config user.email "otamachan@gmail.com"
        git remote add origin https://otamachan:${GITHUB_TOKEN}@github.com/rospypi/simple.git
        git checkout -b ${BRANCH_NAME}${BRANCH_SUFFIX}
        git add .
        git commit -am "Release $(date)"
        git push -f origin ${BRANCH_NAME}${BRANCH_SUFFIX}
      shell: bash

  update-pages:
    needs: native-build
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive
    - name: Set up Python
      uses: actions/setup-python@v1
      with:
        python-version: 3.6
    - name: Install rospy-build
      run: |
        python -m pip install --upgrade pip
        pip install -U setuptools wheel
        ./rospy-builder/install.sh
        pip install rospy-builder/
    - name: Generate index html
      run: |
        mkdir index
        rospy-build index index
        rospy-build index --prefix pre index/_pre
    - name: Runs only when tagged or pushed to master
      if: startsWith(github.ref, 'refs/tags/') || github.ref == env.MASTER_BRANCH
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        cd index
        git init
        git config user.name "Tamaki Nishino"
        git config user.email "otamachan@gmail.com"
        git remote add origin https://otamachan:${GITHUB_TOKEN}@github.com/rospypi/simple.git
        git checkout -b gh-pages
        touch .nojekyll
        git add .
        git commit -am "Release $(date)"
        git push -f origin gh-pages
      shell: bash

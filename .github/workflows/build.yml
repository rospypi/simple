name: Build test
on:
  push:
    tags:
  pull_request:
    branches:
      - master
env:
  MASTER_BRANCH: refs/heads/master
  INDEX_BUILDER_COMMIT: 4fc61ecb09514fe285f43c7316c5c7f52c3ade6b
jobs:
  universal-build:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive
    - name: Set up Python
      uses: actions/setup-python@v1
      with:
        python-version: 3.6
    - name: Install rospy-build
      run: |
        python -m pip install --upgrade pip
        pip install -U setuptools==51.2.0 wheel
        ./rospy-builder/install.sh
        pip install rospy-builder/
    - name: Export branch suffix and make an empty directory
      if: github.ref == env.MASTER_BRANCH
      run: |
        echo BRANCH_SUFFIX=_pre >> $GITHUB_ENV
        mkdir -p any
      shell: bash
    - name: Download deployed packages
      if: github.ref != env.MASTER_BRANCH
      run: |
        git clone -b any https://github.com/rospypi/simple.git any
        rm any/.git -rf
    - name: Build platform independent packages
      run: |
        rospy-build build -d any
    - name: Runs only when tagged or pushed to master
      if: startsWith(github.ref, 'refs/tags/') || github.ref == env.MASTER_BRANCH
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        cd any
        git init
        git config user.name "Tamaki Nishino"
        git config user.email "otamachan@gmail.com"
        git remote add origin https://otamachan:${GITHUB_TOKEN}@github.com/rospypi/simple.git
        git checkout -b any${BRANCH_SUFFIX}
        touch .keep
        git add .
        git commit -am "Release $(date)"
        git push -f origin any${BRANCH_SUFFIX}

  native-build:
    needs: universal-build
    runs-on: ${{ matrix.platform }}
    strategy:
      matrix:
        platform: [ubuntu-20.04, macos-latest, windows-latest]
        python-version: [3.6, 3.7, 3.8]
        exclude:
          - platform: macos-latest
            python-version: 3.6
          - platform: windows-latest
            python-version: 3.6
        include:
          - platform: macos-10.15
            python-version: 3.6
          - platform: windows-2019
            python-version: 3.6

    steps:
    - name: Git config
      run: git config --global core.symlinks true
      if: startsWith(matrix.platform, 'windows-')
    - uses: actions/checkout@v2
      with:
        submodules: recursive
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install packages(Ubuntu)
      if: startsWith(matrix.platform, 'ubuntu-')
      env:
        PYTHON_VERSION: ${{ matrix.python-version }}
      run: |
        sudo apt-get update
        sudo apt install liblz4-dev sip-dev libeigen3-dev sip-dev libboost-all-dev
        echo BRANCH_NAME=Linux_${PYTHON_VERSION} >> $GITHUB_ENV
    - name: Install packages(MacOS)
      if: startsWith(matrix.platform, 'macos-')
      env:
        PYTHON_VERSION: ${{ matrix.python-version }}
      run: |
        brew install eigen boost
        echo BRANCH_NAME=Darwin_${PYTHON_VERSION} >> $GITHUB_ENV
    - name: Add msbuild to PATH(Windows)
      if: startsWith(matrix.platform, 'windows-')
      uses: microsoft/setup-msbuild@v1.1
    - name: Install packages(Windows)
      if: startsWith(matrix.platform, 'windows-')
      env:
        PYTHON_VERSION: ${{ matrix.python-version }}
      run: |
        curl -LO -s "https://github.com/lz4/lz4/archive/v1.9.2.zip"
        unzip -q v1.9.2.zip -d roslz4
        msbuild.exe "roslz4\lz4-1.9.2\visual\VS2017\liblz4\liblz4.vcxproj" //t:Build //p:Configuration=Release //p:Platform="x64" //p:ForceImportBeforeCppTargets="D:\a\simple\simple\roslz4\build.props" //p:WindowsTargetPlatformVersion="10.0.19041.0"
        curl -LO -s "https://gitlab.com/libeigen/eigen/-/archive/3.3.7/eigen-3.3.7.zip"
        unzip -q eigen-3.3.7.zip -d PyKDL
        curl -LO -s "https://sourceforge.net/projects/boost/files/boost-binaries/1.72.0/boost_1_72_0-msvc-14.2-64.exe"
        ./boost_1_72_0-msvc-14.2-64.exe //SILENT //SP- //SUPPRESSMSGBOXES //DIR=boost_1_72_0
        mkdir -p boost_1_72_0/include
        mv boost_1_72_0/boost boost_1_72_0/include
        mv boost_1_72_0/lib64-msvc-14.2 boost_1_72_0/lib
        ls boost_1_72_0/include
        echo BOOST_ROOT=$(cmd //c cd)\\boost_1_72_0 >> $GITHUB_ENV
        echo EIGEN_ROOT=eigen-3.3.7 >> $GITHUB_ENV
        echo BRANCH_NAME=Windows_${PYTHON_VERSION} >> $GITHUB_ENV
      shell: bash
    - name: Install rospy-build
      run: |
        python -m pip install --upgrade pip
        pip install -U setuptools==51.2.0 wheel
        bash ./rospy-builder/install.sh
        pip install rospy-builder/
    - name: Export branch suffix and make an empty directory
      if: github.ref == env.MASTER_BRANCH
      run: |
        echo BRANCH_SUFFIX=_pre >> $GITHUB_ENV
        mkdir -p ${BRANCH_NAME}
      shell: bash
    - name: Download deployed packages
      if: github.ref != env.MASTER_BRANCH
      run: |
        git clone -b ${BRANCH_NAME} https://github.com/rospypi/simple.git ${BRANCH_NAME} || true
        mkdir -p ${BRANCH_NAME}
        rm -rf ${BRANCH_NAME}/.git
      shell: bash
    - name: Build packages
      run: |
        rospy-build build -d ${BRANCH_NAME} --native
      shell: bash
    - name: Runs only when tagged or pushed to master
      if: startsWith(github.ref, 'refs/tags/') || github.ref == env.MASTER_BRANCH
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        cd ${BRANCH_NAME}
        git init
        git config user.name "Tamaki Nishino"
        git config user.email "otamachan@gmail.com"
        git remote add origin https://otamachan:${GITHUB_TOKEN}@github.com/rospypi/simple.git
        git checkout -b ${BRANCH_NAME}${BRANCH_SUFFIX}
        touch .keep
        git add .
        git commit -am "Release $(date)"
        git push -f origin ${BRANCH_NAME}${BRANCH_SUFFIX}
      shell: bash

  update-pages:
    needs: native-build
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive
    - name: Set up Python
      uses: actions/setup-python@v1
      with:
        python-version: 3.8
    - name: Prepare build env
      run: |
          python3 -m pip install --upgrade pip
          pip3 install git+git://github.com/rospypi/index_builder.git@${{ env.INDEX_BUILDER_COMMIT }}
    - name: Build index html
      run: |
          git clone https://github.com/rospypi/simple.git simple
          mkdir index
          python3 -m index_builder repo --path simple index
          python3 -m index_builder repo --prefix pre --path simple index/_pre
    - name: Runs only when tagged or pushed to master
      if: startsWith(github.ref, 'refs/tags/') || github.ref == env.MASTER_BRANCH
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        cd index
        git init
        git config user.name "Tamaki Nishino"
        git config user.email "otamachan@gmail.com"
        git remote add origin https://otamachan:${GITHUB_TOKEN}@github.com/rospypi/simple.git
        git checkout -b gh-pages
        touch .nojekyll
        git add .
        git commit -am "Release $(date)"
        git push -f origin gh-pages
      shell: bash
